{"ast":null,"code":"var _jsxFileName = \"D:\\\\Navchania\\\\Webka2.0\\\\Labki\\\\web-laba7-Roman-dev2\\\\traffic-lights-7\\\\src\\\\HorizontalTrafficLight.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport TrafficLights from './TrafficLights';\nimport ClickDisplay from './ClickDisplay';\nimport { TrafficLightsContext } from './TrafficLightsProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HorizontalTrafficLight = () => {\n  _s();\n  const {\n    lights,\n    handleLightClick,\n    resetClicks,\n    toggleOrientation,\n    isVertical\n  } = useContext(TrafficLightsContext);\n\n  // Встановлюємо горизонтальну орієнтацію при монтуванні\n  useEffect(() => {\n    if (isVertical) {\n      toggleOrientation();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ClickDisplay, {\n      data: lights,\n      onReset: resetClicks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TrafficLights, {\n      orientation: \"horizontal\",\n      data: lights,\n      onLightClick: handleLightClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HorizontalTrafficLight, \"nG3XlvDfBxWMAeI+RtkfSpBP9n0=\");\n_c = HorizontalTrafficLight;\nexport default HorizontalTrafficLight;\nvar _c;\n$RefreshReg$(_c, \"HorizontalTrafficLight\");","map":{"version":3,"names":["React","useContext","useEffect","TrafficLights","ClickDisplay","TrafficLightsContext","jsxDEV","_jsxDEV","Fragment","_Fragment","HorizontalTrafficLight","_s","lights","handleLightClick","resetClicks","toggleOrientation","isVertical","children","data","onReset","fileName","_jsxFileName","lineNumber","columnNumber","orientation","onLightClick","_c","$RefreshReg$"],"sources":["D:/Navchania/Webka2.0/Labki/web-laba7-Roman-dev2/traffic-lights-7/src/HorizontalTrafficLight.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport TrafficLights from './TrafficLights';\r\nimport ClickDisplay from './ClickDisplay';\r\nimport { TrafficLightsContext } from './TrafficLightsProvider';\r\n\r\nconst HorizontalTrafficLight = () => {\r\n  const { lights, handleLightClick, resetClicks, toggleOrientation, isVertical } = useContext(TrafficLightsContext);\r\n\r\n  // Встановлюємо горизонтальну орієнтацію при монтуванні\r\n  useEffect(() => {\r\n    if (isVertical) {\r\n      toggleOrientation();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <> \r\n      <ClickDisplay data={lights} onReset={resetClicks} />\r\n      <TrafficLights orientation=\"horizontal\" data={lights} onLightClick={handleLightClick} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HorizontalTrafficLight;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,oBAAoB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/D,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC,MAAM;IAAEC,gBAAgB;IAAEC,WAAW;IAAEC,iBAAiB;IAAEC;EAAW,CAAC,GAAGf,UAAU,CAACI,oBAAoB,CAAC;;EAEjH;EACAH,SAAS,CAAC,MAAM;IACd,IAAIc,UAAU,EAAE;MACdD,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA,CAACH,YAAY;MAACc,IAAI,EAAEN,MAAO;MAACO,OAAO,EAAEL;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpDhB,OAAA,CAACJ,aAAa;MAACqB,WAAW,EAAC,YAAY;MAACN,IAAI,EAAEN,MAAO;MAACa,YAAY,EAAEZ;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACxF,CAAC;AAEP,CAAC;AAACZ,EAAA,CAhBID,sBAAsB;AAAAgB,EAAA,GAAtBhB,sBAAsB;AAkB5B,eAAeA,sBAAsB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}