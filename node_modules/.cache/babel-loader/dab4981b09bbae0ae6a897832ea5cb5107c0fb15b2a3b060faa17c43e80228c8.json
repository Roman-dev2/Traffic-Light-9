{"ast":null,"code":"var _jsxFileName = \"D:\\\\Navchania\\\\Webka2.0\\\\Labki\\\\web-laba5-Roman-dev2\\\\traffic-lights-5\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport TrafficLights from './TrafficLights';\nimport ClickDisplay from './ClickDisplay';\nimport trafficLightsData from './TrafficLightsData.json';\nimport StatsBar from './StatsBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(trafficLightsData);\n  const [isVertical, setIsVertical] = useState(true);\n  const handleLightClick = id => {\n    const newData = data.map(item => {\n      if (item.id === id) {\n        return {\n          ...item,\n          clickcount: item.clickcount + 1\n        };\n      }\n      return item;\n    });\n    setData(newData);\n  };\n  const resetClicks = () => {\n    const resetData = data.map(item => ({\n      ...item,\n      clickcount: 0\n    }));\n    setData(resetData);\n  };\n  const toggleOrientation = () => {\n    setIsVertical(!isVertical);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(StatsBar, {\n      toggleOrientation: toggleOrientation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClickDisplay, {\n      data: data,\n      onReset: resetClicks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TrafficLights, {\n      orientation: isVertical ? \"vertical\" : \"horizontal\",\n      data: data,\n      onLightClick: handleLightClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UwQ57fbcDxsS8QoEhc4jA3WUfPk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TrafficLights","ClickDisplay","trafficLightsData","StatsBar","jsxDEV","_jsxDEV","App","_s","data","setData","isVertical","setIsVertical","handleLightClick","id","newData","map","item","clickcount","resetClicks","resetData","toggleOrientation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onReset","orientation","onLightClick","_c","$RefreshReg$"],"sources":["D:/Navchania/Webka2.0/Labki/web-laba5-Roman-dev2/traffic-lights-5/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport TrafficLights from './TrafficLights'; \nimport ClickDisplay from './ClickDisplay'; \nimport trafficLightsData from './TrafficLightsData.json'; \nimport StatsBar from './StatsBar';\n\nfunction App() {\n  \n  const [data, setData] = useState(trafficLightsData);\n  const [isVertical, setIsVertical] = useState(true); \n \n  const handleLightClick = (id) => {\n    const newData = data.map(item => {\n      if (item.id === id) {\n        return { ...item, clickcount: item.clickcount + 1 };\n      }\n      return item;\n    });\n    setData(newData);\n  };\n\n  const resetClicks = () => {\n    const resetData = data.map(item => ({ ...item, clickcount: 0 }));\n    setData(resetData);\n  };\n\n  const toggleOrientation = () => {\n    setIsVertical(!isVertical);\n  };\n  \n  return (\n    <div className=\"App\">\n      <StatsBar toggleOrientation={toggleOrientation} /> \n      <ClickDisplay data={data} onReset={resetClicks} />\n      <TrafficLights orientation={isVertical ? \"vertical\" : \"horizontal\"} data={data} onLightClick={handleLightClick} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,iBAAiB,MAAM,0BAA0B;AACxD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACG,iBAAiB,CAAC;EACnD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMa,gBAAgB,GAAIC,EAAE,IAAK;IAC/B,MAAMC,OAAO,GAAGN,IAAI,CAACO,GAAG,CAACC,IAAI,IAAI;MAC/B,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGG,IAAI;UAAEC,UAAU,EAAED,IAAI,CAACC,UAAU,GAAG;QAAE,CAAC;MACrD;MACA,OAAOD,IAAI;IACb,CAAC,CAAC;IACFP,OAAO,CAACK,OAAO,CAAC;EAClB,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,SAAS,GAAGX,IAAI,CAACO,GAAG,CAACC,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEC,UAAU,EAAE;IAAE,CAAC,CAAC,CAAC;IAChER,OAAO,CAACU,SAAS,CAAC;EACpB,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BT,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEL,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA,CAACF,QAAQ;MAACiB,iBAAiB,EAAEA;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDrB,OAAA,CAACJ,YAAY;MAACO,IAAI,EAAEA,IAAK;MAACmB,OAAO,EAAET;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDrB,OAAA,CAACL,aAAa;MAAC4B,WAAW,EAAElB,UAAU,GAAG,UAAU,GAAG,YAAa;MAACF,IAAI,EAAEA,IAAK;MAACqB,YAAY,EAAEjB;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/G,CAAC;AAEV;AAACnB,EAAA,CA/BQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}