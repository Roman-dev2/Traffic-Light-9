{"ast":null,"code":"var _jsxFileName = \"D:\\\\Navchania\\\\Webka2.0\\\\Labki\\\\web-laba7-Roman-dev2\\\\traffic-lights-7\\\\src\\\\ClickDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { TrafficLightsContext } from './TrafficLightsProvider';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './ClickDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClickDisplay = () => {\n  _s();\n  const {\n    lights,\n    resetClicks\n  } = useContext(TrafficLightsContext);\n  if (!lights) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clickDisplay\",\n    children: [lights.map(light => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: light.color\n      },\n      children: [light.description, \": \", light.clickcount]\n    }, light.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"resetButton\",\n      onClick: resetClicks,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-sync-alt fa-3x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(ClickDisplay, \"dxQwpYKqHtUJEPWdom3Zeu9mRp4=\");\n_c = ClickDisplay;\nexport default ClickDisplay;\nvar _c;\n$RefreshReg$(_c, \"ClickDisplay\");","map":{"version":3,"names":["React","useContext","TrafficLightsContext","jsxDEV","_jsxDEV","ClickDisplay","_s","lights","resetClicks","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","light","style","color","description","clickcount","id","onClick","_c","$RefreshReg$"],"sources":["D:/Navchania/Webka2.0/Labki/web-laba7-Roman-dev2/traffic-lights-7/src/ClickDisplay.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { TrafficLightsContext } from './TrafficLightsProvider';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './ClickDisplay.css';\r\n\r\nconst ClickDisplay = () => {\r\n  const { lights, resetClicks } = useContext(TrafficLightsContext);\r\n  if (!lights) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"clickDisplay\">\r\n      {lights.map(light => (\r\n        <span key={light.id} style={{ color: light.color }}>\r\n          {light.description}: {light.clickcount}\r\n        </span>\r\n      ))}\r\n      <button id=\"resetButton\" onClick={resetClicks}>\r\n        <i className=\"fas fa-sync-alt fa-3x\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClickDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAO,+CAA+C;AACtD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,MAAM;IAAEC;EAAY,CAAC,GAAGP,UAAU,CAACC,oBAAoB,CAAC;EAChE,IAAI,CAACK,MAAM,EAAE,oBAAOH,OAAA;IAAAK,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzC,oBACET,OAAA;IAAKU,SAAS,EAAC,cAAc;IAAAL,QAAA,GAC1BF,MAAM,CAACQ,GAAG,CAACC,KAAK,iBACfZ,OAAA;MAAqBa,KAAK,EAAE;QAAEC,KAAK,EAAEF,KAAK,CAACE;MAAM,CAAE;MAAAT,QAAA,GAChDO,KAAK,CAACG,WAAW,EAAC,IAAE,EAACH,KAAK,CAACI,UAAU;IAAA,GAD7BJ,KAAK,CAACK,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb,CACP,CAAC,eACFT,OAAA;MAAQiB,EAAE,EAAC,aAAa;MAACC,OAAO,EAAEd,WAAY;MAAAC,QAAA,eAC5CL,OAAA;QAAGU,SAAS,EAAC;MAAuB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACP,EAAA,CAhBID,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAkBlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}