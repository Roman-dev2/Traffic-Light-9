{"ast":null,"code":"var _jsxFileName = \"D:\\\\Navchania\\\\Webka2.0\\\\Labki\\\\web-laba7-Roman-dev2\\\\traffic-lights-7\\\\src\\\\TrafficLightsProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Створення контексту, який буде доступний для інших компонент\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrafficLightsContext = /*#__PURE__*/createContext();\n\n// Provider компонента, яка обгортає дітей в контекст з доступним станом і методами\nexport const TrafficLightsProvider = ({\n  children\n}) => {\n  _s();\n  const [lights, setLights] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Завантажуємо дані про світлофори\n  useEffect(() => {\n    const fetchLights = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/lights');\n        setLights(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Failed to fetch lights:\", error);\n        setLoading(false);\n      }\n    };\n    fetchLights();\n  }, []);\n\n  // Метод для оновлення кількості кліків\n  const handleLightClick = async id => {\n    const light = lights.find(light => light.id === id);\n    const updatedLight = {\n      ...light,\n      clickcount: light.clickcount + 1\n    };\n    try {\n      await axios.put(`http://localhost:5000/lights/${id}`, updatedLight);\n      setLights(lights.map(light => light.id === id ? updatedLight : light));\n    } catch (error) {\n      console.error(\"Failed to update light:\", error);\n    }\n  };\n\n  // Метод для скидання кількості кліків\n  const resetClicks = async () => {\n    const resetData = lights.map(light => ({\n      ...light,\n      clickcount: 0\n    }));\n    try {\n      resetData.forEach(async light => {\n        await axios.put(`http://localhost:5000/lights/${light.id}`, light);\n      });\n      setLights(resetData);\n    } catch (error) {\n      console.error(\"Failed to reset lights:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TrafficLightsContext.Provider, {\n    value: {\n      lights,\n      handleLightClick,\n      resetClicks,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(TrafficLightsProvider, \"4fHsuzjgrkZzJGvduKczURDRH5w=\");\n_c = TrafficLightsProvider;\nvar _c;\n$RefreshReg$(_c, \"TrafficLightsProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","TrafficLightsContext","TrafficLightsProvider","children","_s","lights","setLights","loading","setLoading","fetchLights","response","get","data","error","console","handleLightClick","id","light","find","updatedLight","clickcount","put","map","resetClicks","resetData","forEach","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Navchania/Webka2.0/Labki/web-laba7-Roman-dev2/traffic-lights-7/src/TrafficLightsProvider.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Створення контексту, який буде доступний для інших компонент\r\nexport const TrafficLightsContext = createContext();\r\n\r\n// Provider компонента, яка обгортає дітей в контекст з доступним станом і методами\r\nexport const TrafficLightsProvider = ({ children }) => {\r\n    const [lights, setLights] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Завантажуємо дані про світлофори\r\n    useEffect(() => {\r\n        const fetchLights = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/lights');\r\n                setLights(response.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch lights:\", error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchLights();\r\n    }, []);\r\n\r\n    // Метод для оновлення кількості кліків\r\n    const handleLightClick = async (id) => {\r\n        const light = lights.find(light => light.id === id);\r\n        const updatedLight = { ...light, clickcount: light.clickcount + 1 };\r\n        try {\r\n            await axios.put(`http://localhost:5000/lights/${id}`, updatedLight);\r\n            setLights(lights.map(light => light.id === id ? updatedLight : light));\r\n        } catch (error) {\r\n            console.error(\"Failed to update light:\", error);\r\n        }\r\n    };\r\n\r\n    // Метод для скидання кількості кліків\r\n    const resetClicks = async () => {\r\n        const resetData = lights.map(light => ({ ...light, clickcount: 0 }));\r\n        try {\r\n            resetData.forEach(async light => {\r\n                await axios.put(`http://localhost:5000/lights/${light.id}`, light);\r\n            });\r\n            setLights(resetData);\r\n        } catch (error) {\r\n            console.error(\"Failed to reset lights:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TrafficLightsContext.Provider value={{ lights, handleLightClick, resetClicks, loading }}>\r\n            {children}\r\n        </TrafficLightsContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,oBAAoB,gBAAGN,aAAa,CAAC,CAAC;;AAEnD;AACA,OAAO,MAAMO,qBAAqB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,8BAA8B,CAAC;QAChEL,SAAS,CAACI,QAAQ,CAACE,IAAI,CAAC;QACxBJ,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CL,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,gBAAgB,GAAG,MAAOC,EAAE,IAAK;IACnC,MAAMC,KAAK,GAAGZ,MAAM,CAACa,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACD,EAAE,KAAKA,EAAE,CAAC;IACnD,MAAMG,YAAY,GAAG;MAAE,GAAGF,KAAK;MAAEG,UAAU,EAAEH,KAAK,CAACG,UAAU,GAAG;IAAE,CAAC;IACnE,IAAI;MACA,MAAMtB,KAAK,CAACuB,GAAG,CAAE,gCAA+BL,EAAG,EAAC,EAAEG,YAAY,CAAC;MACnEb,SAAS,CAACD,MAAM,CAACiB,GAAG,CAACL,KAAK,IAAIA,KAAK,CAACD,EAAE,KAAKA,EAAE,GAAGG,YAAY,GAAGF,KAAK,CAAC,CAAC;IAC1E,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;;EAED;EACA,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,SAAS,GAAGnB,MAAM,CAACiB,GAAG,CAACL,KAAK,KAAK;MAAE,GAAGA,KAAK;MAAEG,UAAU,EAAE;IAAE,CAAC,CAAC,CAAC;IACpE,IAAI;MACAI,SAAS,CAACC,OAAO,CAAC,MAAMR,KAAK,IAAI;QAC7B,MAAMnB,KAAK,CAACuB,GAAG,CAAE,gCAA+BJ,KAAK,CAACD,EAAG,EAAC,EAAEC,KAAK,CAAC;MACtE,CAAC,CAAC;MACFX,SAAS,CAACkB,SAAS,CAAC;IACxB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,oBACIb,OAAA,CAACC,oBAAoB,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,MAAM;MAAEU,gBAAgB;MAAEQ,WAAW;MAAEhB;IAAQ,CAAE;IAAAJ,QAAA,EACpFA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAExC,CAAC;AAAC3B,EAAA,CAlDWF,qBAAqB;AAAA8B,EAAA,GAArB9B,qBAAqB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}